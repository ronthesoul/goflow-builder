name: goflowBuilder-Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      NOTIFY: ".github/workflows/notify.sh"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Notify Start
      run: |
        chmod +x $NOTIFY
        $NOTIFY "Starting ${{ github.event.repository.name }} Test - Commit: ${{ github.event.head_commit.message }}" $SLACK_WEBHOOK

    - name: Build
      run: |
        set +e
        $NOTIFY "Starting Step - Build" $SLACK_WEBHOOK
        go build -v ./... > build.log 2>&1
        STATUS=$?
        OUTPUT=$(cat build.log)
        rm build.log

        if [[ $STATUS -eq 0 ]]; then
          $NOTIFY "Step - Build ‚úÖ Success" $SLACK_WEBHOOK
        else
          $NOTIFY "Step - Build ‚ùå Failed \n\`\`\`$OUTPUT\`\`\`" $SLACK_WEBHOOK
          exit 1
        fi

    - name: Test
      run: |
        set +e
        $NOTIFY "Starting Step - Test" "$SLACK_WEBHOOK"
        go test -v ./... > build.log 2>&1
        STATUS=$?
        OUTPUT=$(cat build.log | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
        rm build.log

        if [[ $STATUS -eq 0 ]]; then
          $NOTIFY "Step - Test ‚úÖ Success" "$SLACK_WEBHOOK"
        else
          $NOTIFY "Step - Test ‚ùå Failed:\n\`\`\`$OUTPUT\`\`\`" "$SLACK_WEBHOOK"
          exit 1
        fi

    - name: Security check
      run: |
        set +e
        set -x
        $NOTIFY "Starting Step - Security check" "$SLACK_WEBHOOK"
        go install github.com/securego/gosec/v2/cmd/gosec@latest

        gosec ./... > security.log 2>&1
        STATUS=$?
        OUTPUT=$(cat security.log)
        rm security.log

        if [[ $STATUS -eq 0 ]]; then
          $NOTIFY "Step - Security check ‚úÖ Success" "$SLACK_WEBHOOK"
        else
          $NOTIFY "Step - Security check ‚ùå Failed:\n\`\`\`$OUTPUT\`\`\`" "$SLACK_WEBHOOK"
          exit 1
        fi

    - name: Build Go binary
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/goflow-builder main.go

    - name: Archive tool
      run: |
        cd dist
        zip goflow-builder-${{ github.run_number }}.zip goflow-builder

    - name: Upload release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        files: dist/goflow-builder-${{ github.run_number }}.zip

    - name: Final pipeline result
      if: success()
      run: |
        $NOTIFY "üöÄ Pipeline completed successfully!" $SLACK_WEBHOOK

    - name: Final pipeline failure
      if: failure()
      run: |
        $NOTIFY "üî• Pipeline failed!" $SLACK_WEBHOOK